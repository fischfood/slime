/* Box sizing rules */
@import url("https://use.typekit.net/foj4ord.css");
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body, h1, h2, h3, h4, p,
figure, blockquote, dl, dd {
  margin-block-end: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role=list],
ol[role=list] {
  list-style: none;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1, h2, h3, h4,
button, input, label {
  line-height: 1.1;
}

/* Balance text wrapping on headings */
h1, h2,
h3, h4 {
  text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto;
  color: currentColor;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input, button,
textarea, select {
  font: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

/**
 * 01. Colors
 * * 01.1 Assignments
 * 02. Sizes
 * * 02.1 Breakpoints
 * 03. Globals
 * 04. Maps
 * 05. Fonts

 */
/**
 * 01. Positioning
 * 02. Breakpoints
 * 03. Hovers
 * 04. Typography
 */
.block-container,
.grid-container,
.flex-container,
.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  padding-left: 1rem;
  padding-right: 1rem;
  box-sizing: border-box;
}

.block-container {
  display: block;
}

.flex-container, .grid-container {
  display: flex;
}

.full-bg {
  position: relative;
  z-index: 1;
}
.full-bg:before {
  content: "";
  background: inherit;
  width: 100vw;
  height: 100%;
  margin-left: calc((100vw - 1440px) / 2);
}

.align {
  align-items: center;
}

.justify {
  justify-content: center;
}

.shrink {
  flex: 0 0 auto;
}

.grow {
  flex: 1 1 100%;
}

body, html {
  font-family: "como", sans-serif;
  font-weight: 600;
}

h1, h2, h3, h4, h5, h6,
.as-h1, .as-h2, .as-h3, .as-h4, .as-h5, .as-h6 {
  font-family: "TMGtails Sans", sans-serif;
  font-weight: 400;
}

.text-center {
  text-align: center;
}

@font-face {
  font-family: "tmg";
  src: url("../assets/fonts/tmg.eot");
  src: url("../assets/fonts/tmg.eot?#iefix") format("embedded-opentype"), url("../assets/fonts/tmg.svg#aec") format("svg"), url("../assets/fonts/tmg.woff") format("woff"), url("../assets/fonts/tmg.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
@media screen and (-webkit-min-device-pixel-ratio: 0) {
  @font-face {
    font-family: "tmg";
    src: url("../assets/fonts/tmg.svg#tmg") format("svg");
  }
}
[class^=icon-], [class*=" icon-"] {
  font-family: "tmg";
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@keyframes fadeInAnimation {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.wave-top {
  height: 29px;
  width: 100%;
}
.wave-top svg #waves path {
  fill: #F5B080 !important;
}

.page-container {
  background-color: #FFFAF7;
}

.button {
  display: inline-block;
  background: #878B6B;
  color: #fff;
  font-family: "TMGtails Sans", sans-serif;
  letter-spacing: 1px;
  text-decoration: none;
  text-transform: uppercase;
  padding: 0.5rem 1rem;
  border-radius: 10rem;
}

.socials {
  list-style-type: none;
  text-align: center;
  margin: 0;
  padding: 0;
}
.socials li {
  display: inline-block;
  font-size: 0;
  padding: 0.125rem;
}
.socials li a:before {
  content: "";
  display: block;
  height: 1.5rem;
  width: 1.5rem;
  border-radius: 1rem;
  border: 2px solid #685C56;
}
.socials li a:hover:before {
  background-color: #685C56;
}

@media screen and (min-width: 768px) {
  .hide-for-desktop, .show-for-mobile {
    display: none;
  }
}
@media screen and (max-width: 767px) {
  .show-for-desktop, .hide-for-mobile {
    display: none;
  }
}
.main-content {
  min-height: 40vh;
}

ul.menu {
  list-style-type: none;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  font-family: "TMGtails Sans", sans-serif;
  font-weight: 400;
  padding: 0;
}
/**
 * 00. Variables
 * 01. Banner
 * 02. Main Nav
 * * 02.1 - Scrolled Header / Shrunk Header
 * 03. Mobile Nav
 */
.header-banner {
  padding: 1rem;
  background: #878B6B;
  color: #fff;
  font-family: "TMGtails Sans", sans-serif;
  letter-spacing: 1px;
  text-align: center;
  text-transform: uppercase;
}
.header-banner .container {
  animation: fadeInAnimation ease 2s;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}
.header-banner.clickable {
  cursor: pointer;
}
.header-banner a {
  color: #fff;
  text-decoration: none;
}
.header-banner strong, .header-banner span {
  color: #F5B080;
}

header#header {
  position: relative;
  z-index: 1060;
  background: #FFFAF7;
  box-shadow: 0px 0px 10px rgba(166, 118, 103, 0.2);
  transition: background 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
}
header#header .header-logo-link {
  position: relative;
}
header#header .header-logo {
  height: 140px;
  width: 140px;
  transition: height 0.225s ease-in-out, opacity 0.45s ease-in-out 0.225s;
}
header#header .alt-logo-container {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
}
header#header .alt-logo-container .alt-logo {
  opacity: 0;
  width: 100%;
  height: 100%;
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  transition: opacity 0.225s ease-in-out;
}
header#header .hair-logo-container {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
}
header#header .hair-logo-container .hair-logo {
  position: relative;
  width: 100%;
  height: 100%;
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  transition: scale 0.225s ease-in-out, margin 0.225s ease-in-out;
}
header#header .shrink[class*=header-] {
  flex: 0 0 140px;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  gap: 1rem;
}
header#header .header-menu-container {
  display: flex;
  align-items: center;
  justify-content: center;
}
header#header .header-menu {
  width: 100%;
}
header#header .header-menu > li > a {
  color: #000;
  transition: color 0.3s, text-decoration-color 0.3s;
  text-decoration: underline;
  text-decoration-color: transparent;
  text-decoration-style: wavy;
  text-underline-offset: 3px;
}
header#header .header-menu > li > a:hover {
  color: #F5B080;
  text-decoration-color: #000;
}

.header-spacer {
  display: none;
  height: 140px;
}

body.header-scrolled .header-spacer {
  display: block;
}
body.header-scrolled header#header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  box-shadow: 0px 0px 10px rgba(166, 118, 103, 0.2);
}
body.header-scrolled.admin-bar header#header {
  top: 32px;
}

body.header-shrunk header#header {
  background: #F5B080;
}
body.header-shrunk header#header .header-logo {
  height: 60px;
  opacity: 0;
  transition: opacity 0.375s ease-in-out, height 0.375s ease-in-out 0.1875s;
}
body.header-shrunk header#header .alt-logo {
  opacity: 1;
  transition: opacity 0.375s ease-in-out 0.375s;
}
body.header-shrunk header#header .hair-logo {
  scale: 1.2;
  margin: 7px 0 0 -1px;
  transition: scale 0.1875s ease-in-out 0.1875s, margin 0.1875s ease-in-out 0.1875s;
}

/**
 * 00. Variables
 * 01. Main Footer
 * 02. Copyright
 */
footer#footer {
  position: relative;
  z-index: 1;
  margin-top: -1rem;
}

.main-footer {
  background-color: #F5B080;
}
.main-footer .shrink[class*=footer-] {
  flex: 0 0 140px;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  gap: 1rem;
}
.main-footer .footer-logo {
  max-height: 100px;
}

.footer-menu li {
  display: flex;
  flex: 0 0 26%;
  justify-content: center;
  padding: 1rem;
}
.footer-menu a {
  color: #685C56;
  transition: color 0.3s, text-decoration-color 0.3s;
  text-decoration: underline;
  text-decoration-color: transparent;
  text-decoration-style: wavy;
  text-underline-offset: 3px;
}
.footer-menu a:hover {
  color: rgba(104, 92, 86, 0.7);
  text-decoration-color: rgba(104, 92, 86, 0.7);
}

.copyright-container {
  background-color: #685C56;
  color: #fff;
  display: block;
  padding: 2rem;
  font-family: "TMGtails Sans", sans-serif;
  font-size: 0.75rem;
  font-weight: 400;
}
.copyright-container a {
  text-decoration: none;
}
.copyright-container a:hover {
  color: #F5B080;
}

.wp-block-cover.is-style-full {
  margin-left: -1rem;
  margin-right: -1rem;
}
@media only screen and (min-width: 1440px) {
  .wp-block-cover.is-style-full {
    margin-left: calc(-50vw + 720px - 1rem);
    margin-right: calc(-50vw + 720px - 1rem);
  }
}

@font-face {
  font-family: "TMGtails Sans";
  src: url("../assets/fonts/TMGtailsSans-Regular.woff2") format("woff2"), url("../assets/fonts/TMGtailsSans-Regular.woff") format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: block;
}
/* Testing Lines */
.grid-toggle {
  position: fixed;
  top: 50%;
  z-index: 9999999999;
  writing-mode: vertical-rl;
  background: black;
  color: white;
  left: 0;
  border-radius: 10px 0 0 10px;
  transform: rotate(180deg);
  cursor: pointer;
  font-weight: bold;
  height: 90px;
  text-align: center;
  font-family: Helvetica !important;
  font-size: 0.875rem;
}
.grid-toggle:before {
  content: "Grid Off";
  padding: 0.5rem;
}

.tld-grid #header {
  outline: 1px solid blue;
}
.tld-grid #header > div {
  position: relative;
}
.tld-grid #header > div:before, .tld-grid #header > div:after {
  content: "";
  position: absolute;
  height: 4000px;
  max-height: 100vh;
  width: 1px;
  top: 0;
  left: 0;
  background: cyan;
  box-shadow: 0.9375rem 0px 0px tomato;
}
.tld-grid #header > div:after {
  left: auto;
  right: 0;
  box-shadow: -0.9375rem 0px 0px tomato;
}
.tld-grid .grid-toggle {
  background: #00bbff;
}
.tld-grid .grid-toggle:before {
  content: "Grid On";
}
.tld-grid .xoff-canvas-wrapper a[href="#"]:not(.load-more), .tld-grid .xoff-canvas-wrapper a[href=""]:not(.load-more) {
  color: red !important;
  outline: 2px solid red !important;
  animation: pulse 1s infinite;
}

@keyframes pulse {
  0% {
    outline: 2px solid red;
  }
  50% {
    outline: 2px solid transparent;
  }
  100% {
    outline: 2px solid red;
  }
}
html {
  background-color: #685C56;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
