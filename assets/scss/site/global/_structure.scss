/**
 * 00. Display & Media Queries
 * 01. Colors
 * 02. Spacing
 * 03. Container
 * 04. Min and Max
 * 05. Pull Under / Over
 * 06. Lines (Shortcode) and Underlines
 * 07. Alignment (Shortcode)
 */



// 00. Display and Media Queries
.inline {
	display: inline;
}

.inline-block {
	display: inline-block;
}

.show-for-mobile {
	display: none;
}

.show-for-desktop {
	display: block;
}

@media #{$mobile-down} {
	.show-for-mobile {
		display: flex;
	}
	.show-for-desktop {
		display: none;
	}
}


// 01. Colors
@each $label, $hex in $color-map {
	.background-#{$label} {
		background-color: $hex;

		&.clickable {
			transition: background $global-timing;
			&:hover {
				background-color: darken( $hex, 7.5%);
			}
		}
	}

	.color-#{$label}, .color-#{$label}:focus {
		color: $hex;

		&.underline {
			&:before {
				background-color: $hex;
			}
		}
	}

	.links-#{$label} a, .links-#{$label} a:focus {
		color: $hex;
	}
	.bullet-color-#{$label} li:before {
		color: $hex !important;
	}
	.lines-#{$label} {
		&:before, &:after {
			background-color: $hex !important;
		}
	}
}


// 02. Spacing
@include spacing-layout( 'padding' );
@include spacing-layout( 'margin' );

@include breakpoint(medium up) {
	@include spacing-layout( 'padding', 'medium' );
	@include spacing-layout( 'margin', 'medium' );
}

@include breakpoint(large up) {
	@include spacing-layout( 'padding', 'large' );
	@include spacing-layout( 'margin', 'large' );
}

// 03. Container
.container {
	padding: {
		bottom: map-get($spacing-sizes, small);
		top: map-get($spacing-sizes, small);
	};

	@include breakpoint(medium up) {
		&:not(.small) {
			padding: {
				bottom: map-get($spacing-sizes, medium);
				top: map-get($spacing-sizes, medium);
			};
		}
	}

	@include breakpoint(large up) {
		&.large {
			padding: {
				bottom: map-get($spacing-sizes, large);
				top: map-get($spacing-sizes, large);
			};
		}
	}

	&:empty {
		padding: 0 !important;
	}
}

.grid-offset {
	margin-left: $global-padding / -2; // -0.75rem;
	margin-right: $global-padding / -2;

	.offset-padding {
		padding-left: $global-padding / 2;
		padding-right: $global-padding / 2;
	}
}

.mobile-grid-offset {
	@include breakpoint(small only) {
		margin-left: $global-padding / -2 !important;
		margin-right: $global-padding / -2 !important;

		.offset-padding {
			padding-left: $global-padding / 2;
			padding-right: $global-padding / 2;
		}
	}
}

.overflow-container {
	overflow: hidden;
}


// 04. Min and Max
@for $i from 1 to 13 {
	.min-height-#{$i * 50} {
		min-height: $i * 50px;
	}

	.max-height-#{$i * 50} {
		max-height: $i * 50px;
	}

	.min-width-#{$i * 50} {
		min-width: $i * 50px;
	}

	.max-width-#{$i * 50} {
		max-width: $i * 50px;
	}
}

// 05. Pull Under / Over

.pull-under {
	position: relative;
	z-index: 2;
	margin-bottom: $global-padding * -3.75;

	+ * {
		position: relative;
		z-index: 1;
		padding-top: $global-padding * 7.5;
	}

	@include breakpoint( medium only ) {
		margin-bottom: $global-padding * -3;

		+ * {
			padding-top {
				padding-top: $global-padding * 6;
			}
		}
	}

	@include breakpoint( small only ) {
		margin-bottom: $global-padding * -2;

		+ * {
			padding-top {
				padding-top: $global-padding * 4;
			}
		}
	}
}

.pull-over {
	position: relative;
	z-index: 1;
	padding-bottom: $global-padding * 7.5;
	margin-bottom: $global-padding * -3.75;

	+ .mesh_section {
		position: relative;
		z-index: 2;
	}

	@include breakpoint(medium only) {
		padding-bottom: $global-padding * 6;
		margin-bottom: $global-padding * -3;
	}

	@include breakpoint(small only) {
		padding-bottom: $global-padding * 4;
		margin-bottom: $global-padding * -2;
	}
}


.pull-under-desktop {
	@include breakpoint( $breakpoint-desktop ) {
		position: relative;
		z-index: 2;
		margin-bottom: $global-padding * -3.75;

		+ * {
			position: relative;
			z-index: 1;
			padding-top: $global-padding * 7.5;
		}

		@include breakpoint(medium only) {
			margin-bottom: $global-padding * -3;

			+ * {
				padding-top {
					padding-top: $global-padding * 6;
				}
			}
		}
	}

	@include breakpoint( $breakpoint-mobile ) {
		padding-top: $global-padding;
		padding-bottom: $global-padding;

		+ * {
			padding-top: $global-padding * 2;
		}
	}
}

.pull-over-desktop {
	@include breakpoint( $breakpoint-desktop ) {
		position: relative;
		z-index: 1;
		padding-bottom: $global-padding * 7.5;
		margin-bottom: $global-padding * -3.75;

		+ .mesh_section {
			position: relative;
			z-index: 2;
		}

		@include breakpoint(medium only) {
			padding-bottom: $global-padding * 6;
			margin-bottom: $global-padding * -3;
		}
	}

	@include breakpoint( $breakpoint-mobile ) {
		padding-top: $global-padding;
		padding-bottom: $global-padding;

		+ * {
			padding-top: $global-padding * 2;
		}
	}
}

.pull-under-large {
	@include breakpoint( large ) {
		position: relative;
		z-index: 2;
		margin-bottom: $global-padding * -3.75;

		+ * {
			position: relative;
			z-index: 1;
			padding-top: $global-padding * 7.5;
		}

	}

	@include breakpoint( medium down ) {
		padding-top: $global-padding;
		padding-bottom: $global-padding;

		+ * {
			padding-top: $global-padding * 2;
		}
	}
}

.pull-over-large {
	@include breakpoint( large ) {
		position: relative;
		z-index: 1;
		padding-bottom: $global-padding * 7.5;
		margin-bottom: $global-padding * -3.75;

		+ .mesh_section {
			position: relative;
			z-index: 2;
		}
	}

	@include breakpoint( medium down ) {
		padding-top: $global-padding;
		padding-bottom: $global-padding;

		+ * {
			padding-top: $global-padding * 2;
		}
	}
}

.pull-above {
	position: relative;
	z-index: 2;
}

.pull-below {
	position: relative;
	z-index: 1;
}

// 06. Lines and Underlines
.lines {
	position: relative;
	display: inline-block;

	&:before, &:after {
		content: '';
		position: absolute;
		background-color: $dark-primary;
		height: 2px;
		width: 50vw;
		top: 50%;

		top: calc( 50% - 1px );
	}

	&:before {
		right: 105%;
		right: calc( 100% + 1rem );
	}

	&:after {
		left: 105%;
		left: calc( 100% + 1rem );
	}
}

.underline {
	position: relative;
	margin-bottom: 1rem;
	&:before {
		content: '';
		position: absolute;
		height: 2px;
		width: 100vw;
		bottom: 0;
		left: 0;
	}

	&.left {
		&:before {
			left: auto;
			right: 0;
		}
	}
}

// 07. Align-block

.align-block {
	position: relative;
	height: 100%;
	width: 100%;
}